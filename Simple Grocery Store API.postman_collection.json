{
	"info": {
		"_postman_id": "37c2cfb0-1eea-412e-86c2-ecfd3e41dc19",
		"name": "Simple Grocery Store API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40791855",
		"_collection_link": "https://grop2-depi.postman.co/workspace/DEPI-finalProject~ee5a88b1-3ffa-479c-a92e-669319138bb9/collection/40791855-37c2cfb0-1eea-412e-86c2-ecfd3e41dc19?action=share&source=collection_link&creator=40791855"
	},
	"item": [
		{
			"name": "Get-Status",
			"item": [
				{
					"name": "200 ok Successful Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}//status",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "400 Client error Response",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/errproducts?category=coffee",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"errproducts"
							],
							"query": [
								{
									"key": "category",
									"value": "coffee"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "300- IF Redirect",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "500- if Server error",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"description": "StartFragment\n\nReturns the status of the API. Example response:\n\n```\n{\n    \"status\": \"UP\"\n}\n\n ```\n\nStatus `UP` indicates that the API is running as expected.\n\nNo response or any other response indicates that the API is not functioning correctly.\n\nEndFragment"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "get all product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}//products",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "instock",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "GET /products/category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/products?category=coffee",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "coffee"
								},
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "StartFragment\n\n**Parameters**\n\n| Name | Type | In | Required | Description |\n| --- | --- | --- | --- | --- |\n| `category` | string | query | No | Specifies the category of products you want to be returned. It can be one of: meat-seafood, fresh-produce, candy, bread-bakery, dairy, eggs, coffee. |\n| `results` | integer | query | No | Specifies the number of results you want. Must be number between 1 and 20. By default, only 20 products will be displayed. |\n| `available` | boolean | query | No | Specifies the availability of the products. By default, all products will be displaye |\n\nEndFragment"
					},
					"response": []
				},
				{
					"name": "ptoductid=pathparameter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/products/:productId",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": " 2177"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "add cart",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"cart1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{siteUrl}}/carts",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item to cart  using product id from products and cart id which added before",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"productId\": 1709\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{siteUrl}}}/carts/:cartId/items",
							"host": [
								"{{siteUrl}}}"
							],
							"path": [
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item2to cart  using product id from products and cart id which added before Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"productId\": 1709\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{siteUrl}}///carts/:cartId/items",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"",
								"",
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "10Vl-mjZjrV0SCulb4jpN",
									"description": "id taken from added cart befor "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add item2to cart  using product id from products and cart id which added before Copy 2",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"productId\": 1709\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{siteUrl}}///carts/:cartId/items",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"",
								"",
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "10Vl-mjZjrV0SCulb4jpN",
									"description": "id taken from added cart befor "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get added cart  using specified ID  created before= Path parameter Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/carts/:cartId",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "W1IuLKmoQey-FhPeZ4s8O"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify product in cart",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n           {\r\n            \"quantity\": 5\r\n\r\n           }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{siteUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartid}}"
								},
								{
									"key": "itemId",
									"value": "907090977"
								}
							]
						},
						"description": "### PATCH /carts/:cartId/items/:itemId\n\nThis endpoint is used to update the quantity of a specific item in a cart.\n\n#### Request\n\n- Method: `PATCH`\n    \n- URL: `{{siteUrl}}/carts/:cartId/items/:itemId`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    - `quantity` (number, required): The updated quantity of the item in the cart.\n        \n\n#### Response\n\n- Status: 204\n    \n- Content-Type: text/xml\n    \n- Body: null\n    \n\n#### JSON Schema for Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {}\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "get cart items after patch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/carts/:cartId",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "W1IuLKmoQey-FhPeZ4s8O"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "item from cart",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/carts/:cartId/items/:itemId",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": ""
								},
								{
									"key": "itemId",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/orders",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "orders id",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{siteUrl}}/orders",
							"host": [
								"{{siteUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"\r",
					"pm.test(\" for test response \",function(){\r",
					"    pm.expect(pm.response.responseTime).to.be.below(2000);}\r",
					");\r",
					"\r",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "siteUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "cartid",
			"value": "2025-04-07T09:54:47.554Z",
			"type": "default"
		}
	]
}